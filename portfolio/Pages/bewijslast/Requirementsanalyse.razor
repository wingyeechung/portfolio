@page "/bewijslast/leerdoel2"
@inject HttpClient Http

<h1>Leerdoel 2 - Analyseren</h1>
<p><i>Ik wil na afloop van mijn stage in staat zijn om een requirementsanalyse uit te voeren met verschillende belanghebbenden.</i></p>

<br />

<h3>Inleiding</h3>
<p>
    Tijdens de schoolprojecten in de afgelopen twee jaar heb ik vragen opgesteld voor de interviews met de Product Owner (PO), maar zelf ben ik nooit aan het woord geweest tijdens deze interviews.
    Daarnaast hoefden we maar de requirements van één persoon, de PO, te verwerken.
    Omdat ik wil leren om zelf een belanghebbende te interviewen en de requirements van verschillende belanghebbenden samen te voegen, heb ik besloten om hier een leerdoel van te maken.
    Als bewijslast zal ik de opgestelde interviewvragen en requirements laten zien. 
</p>
<br />

<h5><b>Werkwijze</b></h5>
<p>
    Voor het behalen van dit leerdoel heb ik interviews gehouden met verschillende belanghebbenden in het bedrijf. 
    Allereerst heb ik een aantal vragen opgesteld over de problemen in de huidige rapportagetool en gewenste eisen voor de nieuwe rapportagetool.
    Deze vragen heb ik uiteindelijk samengevoegd met de vragen van mijn mede-stagiaire (zie Bewijslast 1).

    Na het opstellen van de vragen hebben mijn mede-stagiaire en ik een interview gehouden met onze bedrijfsbegeleider.
    In dit interview is mijn mede-stagiaire voornamelijk aan het woord geweest en heb ik genotuleerd en eventuele vragen gesteld voor verduidelijking.
    Uit dit interview zijn we te weten gekomen wie de belangrijkste belanghebbenden zijn in het bedrijf en met deze mensen heb ik contact opgenomen via de Mail, Teams en persoonlijk.
    Voor het interview met deze belanghebbenden ben ik aan het woord geweest en heeft mijn mede-stagiaire genotuleerd.

    In totaal hebben mijn mede-stagiaire en ik 6 medewerkers van Ranshuijsen BV geïnterviewd die de belangrijkste belanghebbenden zijn in het bedrijf, omdat zij vaak met rapportage te maken hebben en/of met rapportagetools hebben gewerkt.
</p>
<table class="table">
    <thead style="background-color: #00005a; color: white;">
        <tr>
            <th style="width: 50%">Belanghebbenden</th>
            <th style="width: 25%">Wing Yee</th>
            <th style="width: 25%">Wing Man</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th>Rim (Bedrijfsbegeleider)</th>
            <th>Notulist</th>
            <th>Interviewer</th>
        </tr>
        <tr>
            <th>Karin (Support)</th>
            <th>Interviewer</th>
            <th>Notulist</th>
        </tr>
        <tr>
            <th>Esther (Support)</th>
            <th>Interviewer</th>
            <th>Notulist</th>
        </tr>
        <tr>
            <th>Joey (Developer)</th>
            <th>Interviewer</th>
            <th>Notulist</th>
        </tr>
        <tr>
            <th>Paul (Developer)</th>
            <th>Interviewer</th>
            <th>Notulist</th>
        </tr>
        <tr>
            <th>Robin (Developer)</th>
            <th>Interviewer</th>
            <th>Notulist</th>
        </tr>
    </tbody>
</table>
<br />
<br />
<p>
    Na de interviews met de belanghebbenden hebben mijn mede-stagiaire en ik samen de requirements uit de antwoorden van alle geïnterviewden gehaald en deze geprioriteerd op basis van de MoSCoW-methode om een overzicht te krijgen van de requirements waar de rapportagetool aan moet voldoen (zie Bewijslast 2).
    Daarnaast hebben mijn mede-stagiaire en ik besloten om ook de requirements op te delen in functionele en niet-functionele requirements zoals we het op school hebben geleerd. 
    Hier hebben mijn mede-stagiaire vaak nog wat moeite mee en dus hebben we besloten om deze in praktijk toe te passen.
    Door de requirements in functionele en niet-functionele requirements te onderscheiden, krijg je een overzicht van requirements die de eindgebruiker eist dat een product zou moeten hebben en de requirements die beschrijven hoe een product een bepaalde functie uitvoert (GeeksForGeeks, 2020).
</p>
<br />

<h6><b>MoSCoW-methode</b></h6>
<p>
    Met deze methode kan bepaald worden welke elementen er wel of niet in het eindresultaat moet zitten.
    De MoSCoW-methode is een manier om gewenste eisen te prioriteren op basis van vier categorieën: 
    <ul>
        <li>
            <b>Must have</b><br />
            Dit zijn eisen of taken die absoluut noodzakelijk zijn en in het eindproduct moeten zitten om het te laten functioneren zoals het bedoeld is. 
        </li>
        <li>
            <b>Should have</b><br />
            Dit zijn eisen of taken die zeer gewenst zijn. Deze moeten eigenlijk ook in het eindproduct zitten als het kan. Het eindproduct zou alsnog kunnen functioneren wanneer deze eis niet wordt nageleefd. 
        </li>
        <li>
            <b>Could have</b><br />
            In deze categorie veranderd de eis in een wens. Het zou mooi zijn als het eindproduct aan deze wens voldoet, maar het is niet erg als het niet zo is.
        </li>
        <li>
            <b>Won't/Would have</b><br />
            Dit zijn eisen die op het moment nog niet relevant zijn, maar wellicht wel voor later. Het is echter niet noodzakelijk om nu al tijd en moeite in deze eis te steken.
        </li>
    </ul>
</p>
<br />

<h3><b>Bewijslast 1</b></h3>
<p>
    <i>
    Hieronder zie je de vragen die ik heb opgesteld en de vragen die mijn mede-stagiaire heeft opgesteld. Alles wat groen is gemarkeerd zijn de vragen die we hebben gekozen voor het interview.
    </i>
    <div class="pdfviewer">
        <embed src="pdf/CombinedInterviewQuestions.pdf" style="height: 100vh; width: 90vw;"/>
    </div>
</p>
<br />

<h3><b>Bewijslast 2</b></h3>
<p>
    <i> 
    Hieronder zie de requirements die mijn mede-stagiaire en ik hebben geprioriteerd en onderscheiden in functionele en niet-functionele requirements.    
    </i>
    <div class="pdfviewer">
        <embed src="pdf/Requirements.pdf" style="height: 100vh; width: 90vw;"/>
    </div>
</p>
<br />

<h3>Feedback bedrijfsbegeleider</h3>
<p>
    <i>
    “Wing Yee heeft laten zien dat ze systematisch de requirements kan ophalen bij stakeholders.
    De requirements analyse bevat alle informatie gestructureerd en begrijpelijk.
    Ze bleken ook een goed uitgangspunt te zijn om te bepalen wat de beste opties zijn.
    Ik ben met name onder de indruk van de mate waarin ze zelf hebben doorgrond wat de producten ook echt kunnen ten op zichtte van de requirements.”
    </i>
</p>
<br />

<h3>Reflectie</h3>
<p>
    Tijdens het werken aan dit leerdoel heb ik geleerd om verschillende belanghebbenden in het bedrijf te interviewen en de requirements van de belanghebbenden samen te voegen.
    Bij het opstellen van de vragen voor de interviews had ik aan het begin niet bedacht om voor elk verschillende belanghebbende een aparte vragenlijst op te stellen. De belanghebbenden hadden namelijk allemaal een ander functie, zoals supportmedewerker of developer.
    Pas na het interview met de bedrijfsbegeleider ben ik erachter gekomen dat een aantal vragen niet gesteld hoeven te worden aan andere belanghebbenden zoals de prijsstructuur van het product.
    Na het interview met de bedrijfsbegeleider hebben we dan ook meteen een kopie gemaakt van de interviewvragen en de vragen weggehaald die niet gesteld hoeven te worden aan de andere belanghebbenden. 
    <br /><br />
    De manier waarop de interviews gehouden moest worden was ook elke keer anders. Bij de een moest ik meer doorvragen terwijl de ander een zeer uitgebreid antwoord of zelfs een heel demonstratie gaf.
    Met doorvragen bedoel ik dat ik vragen ging stellen gebaseerd op het antwoord van de geïnterviewde. 
    <br /><br />
    Voor de requirements hebben mijn mede-stagiaire en ik de MoSCoW-methode toegepast op de requirements.
    Nadat we de requirements hadden geprioriteerd op basis van wat de gebruikers eisten, hebben we de requirements laten nakijken door de bedrijfsbegeleider, omdat hij uiteindelijk het laatste woord heeft op wat een must zal zijn.
    Als feedback hebben we gekregen om requirements duidelijker te maken en te nummeren i.p.v. bullet points te maken. Dit maakt het namelijk overzichtelijker.
    Daarnaast heb ik geleerd om requirements te noteren die te meten zijn, want “gebruiksvriendelijk” is bijvoorbeeld niet te meten.
    <br /><br />
    Mijn mede-stagiaire en ik hebben vervolgens na het verwerken van de feedback van bedrijfsbegeleider de requirements onderscheiden in functionele en niet-functionele requirements zoals we het op school hebben geleerd.
    Bij het onderscheiden van de requirements, bleek dat veel opgestelde requirements functioneel waren.
    Dit komt doordat we meer vragen hebben gesteld over wat de gebruiker van de rapportagetool verlangt en weinig vragen over bijvoorbeeld de performance en security eisen aan de rapportagetool zelf.
    Dat laatste komt doordat de performance en security buiten de scope van het project valt. 
    <br /><br />
    Al met al vind ik dat ik dit leerdoel heb behaald, want ik heb geleerd om andere vragen te stellen, door te vragen en me niet alleen aan de opgestelde vragen te houden.
    Daarnaast heb ik geleerd hoe ik duidelijker moet zijn met het beschrijven van requirements en hoe ik de requirements overzichtelijk kan maken met behulp van nummering.
    In de toekomst wil ik passende vragen opstellen voor verschillende belanghebbenden en een onderzoek doen naar de geïnterviewde zodat ik weet wat voor vragen ik bij deze persoon kan stellen.
    Voor de verandering wil ik in toekomstige projecten andere manieren erbij leren om de requirements te onderscheiden en te prioriteren. 
</p>